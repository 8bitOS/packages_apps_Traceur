#!/system/bin/sh

dumpstate=false

if [ "$0" = "/system/bin/dumpstate" ]; then
    if [ "$1" = "-s" ]; then
        # Somehow broken. Workaround: Call dumpstate directly
        dumpstate=false
    else
        dumpstate=true
    fi
fi

if [ "$dumpstate" = "false" ]; then

    echo -n 'Allow full tracing for shell user... '
    su root chmod -R g+w /sys/kernel/debug/tracing/events/ && \
    su root chgrp -R -P shell /sys/kernel/debug/tracing/events/ && \
    echo DONE || { echo FAIL; echo 'Oops, please file a bug with roosa.'; exit; }

    echo -n 'Restart Traceur with new set of tags (if necessary)... '
    su root am broadcast -a com.android.exp.roosa.traceur.FORCE_UPDATE -n com.android.exp.roosa.traceur/.Receiver >/dev/null && \
    echo DONE || { echo FAIL; echo 'Oops, please file a bug with roosa.'; exit; }

    echo -n 'Refresh available tags in Traceur UI... '
    su root am broadcast -a com.android.exp.roosa.traceur.REFRESH_TAGS -p com.android.exp.roosa.traceur >/dev/null && \
    echo DONE || { echo FAIL; echo 'Oops, please file a bug with roosa.'; exit; }

    echo 'Successfully allowed full tracing. Wohoo!'

else
    su root sh -c 'exec -a /system/bin/dumpstate /system/bin/dumpstate_orig "$@"' "$0" "$@"
fi